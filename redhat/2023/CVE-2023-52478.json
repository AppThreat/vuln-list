{
  "mitigation": "null",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-02-29T00:00:00Z",
  "bugzilla": {
    "description": "kernel: HID: logitech-hidpp: Fix kernel crash on receiver USB disconnect",
    "id": "2267036",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2267036"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "6.0",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-362",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2023-52478",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nHID: logitech-hidpp: Fix kernel crash on receiver USB disconnect\nhidpp_connect_event() has *four* time-of-check vs time-of-use (TOCTOU)\nraces when it races with itself.\nhidpp_connect_event() primarily runs from a workqueue but it also runs\non probe() and if a \"device-connected\" packet is received by the hw\nwhen the thread running hidpp_connect_event() from probe() is waiting on\nthe hw, then a second thread running hidpp_connect_event() will be\nstarted from the workqueue.\nThis opens the following races (note the below code is simplified):\n1. Retrieving + printing the protocol (harmless race):\nif (!hidpp-\u003eprotocol_major) {\nhidpp_root_get_protocol_version()\nhidpp-\u003eprotocol_major = response.rap.params[0];\n}\nWe can actually see this race hit in the dmesg in the abrt output\nattached to rhbz#2227968:\n[ 3064.624215] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.\n[ 3064.658184] logitech-hidpp-device 0003:046D:4071.0049: HID++ 4.5 device connected.\nTesting with extra logging added has shown that after this the 2 threads\ntake turn grabbing the hw access mutex (send_mutex) so they ping-pong\nthrough all the other TOCTOU cases managing to hit all of them:\n2. Updating the name to the HIDPP name (harmless race):\nif (hidpp-\u003ename == hdev-\u003ename) {\n...\nhidpp-\u003ename = new_name;\n}\n3. Initializing the power_supply class for the battery (problematic!):\nhidpp_initialize_battery()\n{\nif (hidpp-\u003ebattery.ps)\nreturn 0;\nprobe_battery(); /* Blocks, threads take turns executing this */\nhidpp-\u003ebattery.desc.properties =\ndevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\nhidpp-\u003ebattery.ps =\ndevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\u0026hidpp-\u003ebattery.desc, cfg);\n}\n4. Creating delayed input_device (potentially problematic):\nif (hidpp-\u003edelayed_input)\nreturn;\nhidpp-\u003edelayed_input = hidpp_allocate_input(hdev);\nThe really big problem here is 3. Hitting the race leads to the following\nsequence:\nhidpp-\u003ebattery.desc.properties =\ndevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\nhidpp-\u003ebattery.ps =\ndevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\u0026hidpp-\u003ebattery.desc, cfg);\n...\nhidpp-\u003ebattery.desc.properties =\ndevm_kmemdup(dev, hidpp_battery_props, cnt, GFP_KERNEL);\nhidpp-\u003ebattery.ps =\ndevm_power_supply_register(\u0026hidpp-\u003ehid_dev-\u003edev,\n\u0026hidpp-\u003ebattery.desc, cfg);\nSo now we have registered 2 power supplies for the same battery,\nwhich looks a bit weird from userspace's pov but this is not even\nthe really big problem.\nNotice how:\n1. This is all devm-maganaged\n2. The hidpp-\u003ebattery.desc struct is shared between the 2 power supplies\n3. hidpp-\u003ebattery.desc.properties points to the result from the second\ndevm_kmemdup()\nThis causes a use after free scenario on USB disconnect of the receiver:\n1. The last registered power supply class device gets unregistered\n2. The memory from the last devm_kmemdup() call gets freed,\nhidpp-\u003ebattery.desc.properties now points to freed memory\n3. The first registered power supply class device gets unregistered,\nthis involves sending a remove uevent to userspace which invokes\npower_supply_uevent() to fill the uevent data\n4. power_supply_uevent() uses hidpp-\u003ebattery.desc.properties which\nnow points to freed memory leading to backtraces like this one:\nSep 22 20:01:35 eric kernel: BUG: unable to handle page fault for address: ffffb2140e017f08\n...\nSep 22 20:01:35 eric kernel: Workqueue: usb_hub_wq hub_event\nSep 22 20:01:35 eric kernel: RIP: 0010:power_supply_uevent+0xee/0x1d0\n...\nSep 22 20:01:35 eric kernel:  ? asm_exc_page_fault+0x26/0x30\nSep 22 20:01:35 eric kernel:  ? power_supply_uevent+0xee/0x1d0\nSep 22 20:01:35 eric kernel:  ? power_supply_uevent+0x10d/0x1d0\nSep 22 20:01:35 eric kernel:  dev_uevent+0x10f/0x2d0\nSep 22 20:01:35 eric kernel:  kobject_uevent_env+0x291/0x680\nSep 22 20:01:35 eric kernel:  \n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2023-52478\nhttps://nvd.nist.gov/vuln/detail/CVE-2023-52478\nhttps://lore.kernel.org/linux-cve-announce/2024022921-CVE-2023-52478-c0a1@gregkh/T/#u"
  ]
}