{
  "mitigation": "- Suppress the use of page table sharing (command line option `iommu=no-sharept`). Note however that as of Xen version 4.13 there is also a respective per-guest control (`passthrough=` libxl guest config file option). If any guests have been created with an explicit setting, this setting may conflict with the addition of the `iommu=no-sharept` Xen command line option.\n- Suppress the use of large HAP pages (command line options `hap_2mb=no` and `hap_1gb=no`).\n- Avoid pass-through of PCI devices to HVM guests.",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 5",
      "fix_state": "Out of support scope",
      "package_name": "kernel-xen",
      "cpe": "cpe:/o:redhat:enterprise_linux:5"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2020-07-07T12:00:00Z",
  "bugzilla": {
    "description": "xen: insufficient cache write-back under VT-d leads to DoS (XSA-321)",
    "id": "1851475",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1851475"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.9",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-200",
  "statement": "Only x86 HVM guests using hardware assisted paging (HAP), having a passed through PCI device assigned, and having page table sharing enabled can leverage the vulnerability. Note that page table sharing is enabled (by default) only if Xen considers IOMMU and CPU large page size support compatible. x86 AMD as well as ARM systems are not affected by this flaw.",
  "acknowledgement": "Red Hat would like to thank the Xen project for reporting this issue.",
  "name": "CVE-2020-15565",
  "document_distribution": "",
  "details": [
    "An issue was discovered in Xen through 4.13.x, allowing x86 Intel HVM guest OS users to cause a host OS denial of service or possibly gain privileges because of insufficient cache write-back under VT-d. When page tables are shared between IOMMU and CPU, changes to them require flushing of both TLBs. Furthermore, IOMMUs may be non-coherent, and hence prior to flushing IOMMU TLBs, a CPU cache also needs writing back to memory after changes were made. Such writing back of cached data was missing in particular when splitting large page mappings into smaller granularity ones. A malicious guest may be able to retain read/write DMA access to frames returned to Xen's free pool, and later reused for another purpose. Host crashes (leading to a Denial of Service) and privilege escalation cannot be ruled out. Xen versions from at least 3.2 onwards are affected. Only x86 Intel systems are affected. x86 AMD as well as Arm systems are not affected. Only x86 HVM guests using hardware assisted paging (HAP), having a passed through PCI device assigned, and having page table sharing enabled can leverage the vulnerability. Note that page table sharing will be enabled (by default) only if Xen considers IOMMU and CPU large page size support compatible.",
    "A flaw was found in Xen, in the page table sharing between the IOMMU and CPU. This flaw allows a  malicious guest user to access sensitive information pertaining to other guests to crash the host, resulting in a denial of service and privilege escalation. The highest threat from this vulnerability is to system availability."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2020-15565\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-15565\nhttps://xenbits.xen.org/xsa/advisory-321.html"
  ]
}