{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 5",
      "fix_state": "Not affected",
      "package_name": "glibc",
      "cpe": "cpe:/o:redhat:enterprise_linux:5"
    },
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "glibc",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "glibc",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "glibc",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2020-03-02T00:00:00Z",
  "bugzilla": {
    "description": "glibc: signed comparison vulnerability in the ARMv7 memcpy function",
    "id": "1820331",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1820331"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "8.1",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-190",
  "statement": "Red Hat Enterprise Linux only supports the 64-bit ARM architecture (AArch64) which does not include the vulnerable implementation of `memcpy()`. Therefore, all versions of glibc as shipped with RHEL are not affected by this flaw.",
  "acknowledgement": "",
  "name": "CVE-2020-6096",
  "document_distribution": "",
  "details": [
    "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
    "A signed comparison vulnerability was found in GNU libc in the ARMv7 implementation of memcpy(). The flaw affects the third argument to memcpy() that specifies the number of bytes to copy. An underflow on the third argument could lead to undefined behavior such as out-of-bounds memory write and potentially remote code execution."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2020-6096\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-6096\nhttps://sourceware.org/bugzilla/attachment.cgi?id=12334"
  ]
}