{
  "mitigation": "The Kiali configuration can be manually updated for ServiceMesh so that the default signing_key cannot be easily determined:\noc get kiali -n $(oc get kiali --all-namespaces --no-headers -o custom-columns=NS:.metadata.namespace) -o yaml | sed \"s/spec:/spec:\\n    login_token:\\n      signing_key: $(chars=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890; for i in {1..20}; do echo -n \"${chars:RANDOM%${#chars}:1}\"; done; echo)/\" | oc apply -f -",
  "affected_release": [
    {
      "product_name": "Openshift Service Mesh 1.0",
      "release_date": "2020-03-25T00:00:00Z",
      "advisory": "RHSA-2020:0975",
      "package": "openshift-service-mesh/kiali-rhel7-operator:1.0.12-2",
      "cpe": "cpe:/a:redhat:service_mesh:1.0::el7"
    }
  ],
  "package_state": null,
  "threat_severity": "Important",
  "public_date": "2020-03-25T18:00:00Z",
  "bugzilla": {
    "description": "kiali: JWT cookie uses default signing key",
    "id": "1810383",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1810383"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "8.6",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:H",
    "status": "verified"
  },
  "iava": "",
  "cwe": "CWE-321",
  "statement": "If exploited, an attacker can perform all Kiali admin functions via the API including:\n- View the logs of a pod\n- View Istio metrics, tracing etc.\n- Alter Istio routing configurations:\n- Change the pod availability: adding variances to the weighting, i.e. all traffic goes to 1 pod, or 95% of all traffic. \n- Prevent traffic reaching a pod, DoS\nWhilst OpenShift ServiceMesh Kiali uses the default signing key for JWT cookies, it also includes an access_token. This token is generated with a successful login and cannot be easily determined. \nTo access the Kiali API in this case, a valid session token would need to be captured first and then added to the JWT cookie.",
  "acknowledgement": "Red Hat would like to thank Dagan Henderson (Akoya, LLC) for reporting this issue.",
  "name": "CVE-2020-1764",
  "document_distribution": "",
  "details": [
    "A hard-coded cryptographic key vulnerability in the default configuration file was found in Kiali, all versions prior to 1.15.1. A remote attacker could abuse this flaw by creating their own JWT signed tokens and bypass Kiali authentication mechanisms, possibly gaining privileges to view and alter the Istio configuration.",
    "A hard-coded cryptographic key vulnerability in the default configuration file was found in Kiali. A remote attacker could abuse this flaw by creating their own JWT signed tokens and bypass Kiali authentication mechanisms, possibly gaining privileges to view and alter the Istio configuration."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2020-1764\nhttps://nvd.nist.gov/vuln/detail/CVE-2020-1764\nhttps://kiali.io/news/security-bulletins/kiali-security-001/"
  ]
}