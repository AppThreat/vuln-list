{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Ceph Storage 2",
      "fix_state": "Will not fix",
      "package_name": "golang",
      "cpe": "cpe:/a:redhat:ceph_storage:2"
    },
    {
      "product_name": "Red Hat Ceph Storage 3",
      "fix_state": "Will not fix",
      "package_name": "golang",
      "cpe": "cpe:/a:redhat:ceph_storage:3"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Will not fix",
      "package_name": "golang",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "go-toolset:rhel8/golang",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 3.10",
      "fix_state": "Fix deferred",
      "package_name": "atomic-openshift",
      "cpe": "cpe:/a:redhat:openshift:3.10"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 3.11",
      "fix_state": "Not affected",
      "package_name": "atomic-openshift",
      "cpe": "cpe:/a:redhat:openshift:3.11"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 3.7",
      "fix_state": "Out of support scope",
      "package_name": "atomic-openshift",
      "cpe": "cpe:/a:redhat:openshift:3.7"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 3.9",
      "fix_state": "Fix deferred",
      "package_name": "atomic-openshift",
      "cpe": "cpe:/a:redhat:openshift:3.9"
    },
    {
      "product_name": "Red Hat OpenShift Container Platform 4",
      "fix_state": "Not affected",
      "package_name": "openshift",
      "cpe": "cpe:/a:redhat:openshift:4"
    },
    {
      "product_name": "Red Hat OpenStack Platform 8 (Liberty) Operational Tools",
      "fix_state": "Will not fix",
      "package_name": "golang",
      "cpe": "cpe:/a:redhat:openstack-optools:8"
    },
    {
      "product_name": "Red Hat OpenStack Platform 9 (Mitaka) Operational Tools",
      "fix_state": "Will not fix",
      "package_name": "golang",
      "cpe": "cpe:/a:redhat:openstack-optools:9"
    },
    {
      "product_name": "Red Hat Storage 3",
      "fix_state": "Will not fix",
      "package_name": "golang",
      "cpe": "cpe:/a:redhat:storage:3"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2018-12-13T20:00:00Z",
  "bugzilla": {
    "description": "golang: \"go get\" command vulnerable to RCE via import of malicious package",
    "id": "1657563",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1657563"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-20",
  "statement": "This issue affects the version of golang package in Red Hat Enterprise Linux 7. The golang package, previously available in the Optional channel, will no longer receive updates in Red Hat Enterprise Linux 7. Developers are encouraged to use the Go Toolset instead, which is available through the Red Hat Developer program. https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/7.6_release_notes/chap-red_hat_enterprise_linux-7.6_release_notes-deprecated_functionality_in_rhel7#idm139716309923696",
  "acknowledgement": "Red Hat would like to thank Dmitri Shuralyov (the Go team) for reporting this issue.",
  "name": "CVE-2018-16873",
  "document_distribution": "",
  "details": [
    "In Go before 1.10.6 and 1.11.x before 1.11.3, the \"go get\" command is vulnerable to remote code execution when executed with the -u flag and the import path of a malicious Go package, or a package that imports it directly or indirectly. Specifically, it is only vulnerable in GOPATH mode, but not in module mode (the distinction is documented at https://golang.org/cmd/go/#hdr-Module_aware_go_get). Using custom domains, it's possible to arrange things so that a Git repository is cloned to a folder named \".git\" by using a vanity import path that ends with \"/.git\". If the Git repository root contains a \"HEAD\" file, a \"config\" file, an \"objects\" directory, a \"refs\" directory, with some work to ensure the proper ordering of operations, \"go get -u\" can be tricked into considering the parent directory as a repository root, and running Git commands on it. That will use the \"config\" file in the original Git repository root for its configuration, and if that config file contains malicious commands, they will execute on the system running \"go get -u\"."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2018-16873\nhttps://nvd.nist.gov/vuln/detail/CVE-2018-16873\nhttps://groups.google.com/forum/?pli=1#!topic/golang-announce/Kw31K8G7Fi0"
  ]
}