{
  "affected_release": null,
  "package_state": null,
  "threat_severity": "Moderate",
  "public_date": "2020-02-12T00:00:00Z",
  "bugzilla": {
    "description": "pam_radius: buffer overflow in password field",
    "id": "1686980",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1686980"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-121",
  "statement": "As shipped in epel-6, the gcc compiler opts for __memcpy_chk() [with the correct buffer length] to ensure that there is a crash instead of an an overflow. Thus it is believed that only a Deianl of Service can be triggered using this flaw.",
  "acknowledgement": "",
  "name": "CVE-2015-9542",
  "document_distribution": "",
  "details": [
    "add_password in pam_radius_auth.c in pam_radius 1.4.0 does not correctly check the length of the input password, and is vulnerable to a stack-based buffer overflow during memcpy(). An attacker could send a crafted password to an application (loading the pam_radius library) and crash it. Arbitrary code execution might be possible, depending on the application, C library, compiler, and other factors."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2015-9542\nhttps://nvd.nist.gov/vuln/detail/CVE-2015-9542"
  ]
}