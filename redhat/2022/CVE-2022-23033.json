{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 5",
      "fix_state": "Not affected",
      "package_name": "kernel-xen",
      "cpe": "cpe:/o:redhat:enterprise_linux:5"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2022-01-25T00:00:00Z",
  "bugzilla": {
    "description": "xen: arm: guest_physmap_remove_page not removing the p2m mappings (XSA-393)",
    "id": "2045043",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2045043"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-863",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-23033",
  "document_distribution": "",
  "details": [
    "arm: guest_physmap_remove_page not removing the p2m mappings The functions to remove one or more entries from a guest p2m pagetable on Arm (p2m_remove_mapping, guest_physmap_remove_page, and p2m_set_entry with mfn set to INVALID_MFN) do not actually clear the pagetable entry if the entry doesn't have the valid bit set. It is possible to have a valid pagetable entry without the valid bit set when a guest operating system uses set/way cache maintenance instructions. For instance, a guest issuing a set/way cache maintenance instruction, then calling the XENMEM_decrease_reservation hypercall to give back memory pages to Xen, might be able to retain access to those pages even after Xen started reusing them for other purposes."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-23033\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-23033"
  ]
}