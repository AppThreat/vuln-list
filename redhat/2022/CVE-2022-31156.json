{
  "mitigation": "- Remove all gpg elements from dependency verification metadata if you disable signature validation.\n- Do not add gpg entries for dependencies that do not have signature files.",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat JBoss Enterprise Application Platform 6",
      "fix_state": "Out of support scope",
      "package_name": "gradle",
      "cpe": "cpe:/a:redhat:jboss_enterprise_application_platform:6"
    },
    {
      "product_name": "Red Hat JBoss Enterprise Application Platform 7",
      "fix_state": "Not affected",
      "package_name": "gradle",
      "cpe": "cpe:/a:redhat:jboss_enterprise_application_platform:7"
    },
    {
      "product_name": "Red Hat JBoss Enterprise Application Platform Expansion Pack",
      "fix_state": "Not affected",
      "package_name": "gradle",
      "cpe": "cpe:/a:redhat:jbosseapxp"
    },
    {
      "product_name": "Red Hat Software Collections",
      "fix_state": "Will not fix",
      "package_name": "rh-maven36-byte-buddy",
      "cpe": "cpe:/a:redhat:rhel_software_collections:3"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2022-07-14T00:00:00Z",
  "bugzilla": {
    "description": "gradle: Dependency verification can ignore checksum verification when signature verification cannot be performed",
    "id": "2239399",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2239399"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "4.4",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:N/I:H/A:N",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-347",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-31156",
  "document_distribution": "",
  "details": [
    "Gradle is a build tool. Dependency verification is a security feature in Gradle Build Tool that was introduced to allow validation of external dependencies either through their checksum or cryptographic signatures. In versions 6.2 through 7.4.2, there are some cases in which Gradle may skip that verification and accept a dependency that would otherwise fail the build as an untrusted external artifact. This can occur in two ways. When signature verification is disabled but the verification metadata contains entries for dependencies that only have a `gpg` element but no `checksum` element. When signature verification is enabled, the verification metadata contains entries for dependencies with a `gpg` element but there is no signature file on the remote repository. In both cases, the verification will accept the dependency, skipping signature verification and not complaining that the dependency has no checksum entry. For builds that are vulnerable, there are two risks. Gradle could download a malicious binary from a repository outside your organization due to name squatting. For those still using HTTP only and not HTTPS for downloading dependencies, the build could download a malicious library instead of the expected one. Gradle 7.5 patches this issue by making sure to run checksum verification if signature verification cannot be completed, whatever the reason. Two workarounds are available: Remove all `gpg` elements from dependency verification metadata if you disable signature validation and/or avoid adding `gpg` entries for dependencies that do not have signature files.",
    "A flaw was found in Gradle, which allows a remote, authenticated attacker to bypass security restrictions caused by an issue of dependency verification. It can ignore checksum verification when signature verification cannot be performed. By sending a specially crafted request, an attacker can download the malicious binary from the arbitrary repository or perform a man-in-the-middle attack."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-31156\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-31156\nhttps://github.com/gradle/gradle/security/advisories/GHSA-j6wc-xfg8-jx2j"
  ]
}