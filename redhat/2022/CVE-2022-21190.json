{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Advanced Cluster Security 3",
      "fix_state": "Not affected",
      "package_name": "advanced-cluster-security/rhacs-docs-rhel8",
      "cpe": "cpe:/a:redhat:advanced_cluster_security:3"
    },
    {
      "product_name": "Red Hat Advanced Cluster Security 3",
      "fix_state": "Not affected",
      "package_name": "advanced-cluster-security/rhacs-main-rhel8",
      "cpe": "cpe:/a:redhat:advanced_cluster_security:3"
    },
    {
      "product_name": "Red Hat Advanced Cluster Security 3",
      "fix_state": "Not affected",
      "package_name": "advanced-cluster-security/rhacs-rhel8-operator",
      "cpe": "cpe:/a:redhat:advanced_cluster_security:3"
    },
    {
      "product_name": "Red Hat Advanced Cluster Security 3",
      "fix_state": "Not affected",
      "package_name": "advanced-cluster-security/rhacs-roxctl-rhel8",
      "cpe": "cpe:/a:redhat:advanced_cluster_security:3"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2022-05-13T00:00:00Z",
  "bugzilla": {
    "description": "convict:  A Prototype Pollution Vulnerbility in convict",
    "id": "2086396",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2086396"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-1321",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-21190",
  "document_distribution": "",
  "details": [
    "This affects the package convict before 6.2.3. This is a bypass of [CVE-2022-22143](https://security.snyk.io/vuln/SNYK-JS-CONVICT-2340604). The [fix](https://github.com/mozilla/node-convict/commit/3b86be087d8f14681a9c889d45da7fe3ad9cd880) introduced, relies on the startsWith method and does not prevent the vulnerability: before splitting the path, it checks if it starts with __proto__ or this.constructor.prototype. To bypass this check it's possible to prepend the dangerous paths with any string value followed by a dot, like for example foo.__proto__ or foo.this.constructor.prototype."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-21190\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-21190"
  ]
}