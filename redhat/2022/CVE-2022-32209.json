{
  "affected_release": [
    {
      "product_name": "Red Hat Satellite 6.12 for RHEL 8",
      "release_date": "2022-11-16T00:00:00Z",
      "advisory": "RHSA-2022:8506",
      "package": "rubygem-rails-html-sanitizer-0:1.4.3-2.el8sat",
      "cpe": "cpe:/a:redhat:satellite:6.12::el8"
    }
  ],
  "package_state": null,
  "threat_severity": "Important",
  "public_date": "2022-06-24T00:00:00Z",
  "bugzilla": {
    "description": "rubygem-rails-html-sanitizer: possible xss with certain configurations",
    "id": "2101882",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2101882"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.3",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N",
    "status": "verified"
  },
  "iava": "",
  "cwe": "CWE-79",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2022-32209",
  "document_distribution": "",
  "details": [
    "# Possible XSS Vulnerability in Rails::Html::SanitizerThere is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.This vulnerability has been assigned the CVE identifier CVE-2022-32209.Versions Affected: ALLNot affected: NONEFixed Versions: v1.4.3## ImpactA possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both `select` and `style` elements.Code is only impacted if allowed tags are being overridden. This may be done via application configuration:```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [\"select\", \"style\"]```see https://guides.rubyonrails.org/configuring.html#configuring-action-viewOr it may be done with a `:tags` option to the Action View helper `sanitize`:```\u003c%= sanitize @comment.body, tags: [\"select\", \"style\"] %\u003e```see https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitizeOr it may be done with Rails::Html::SafeListSanitizer directly:```ruby# class-level optionRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]```or```ruby# instance-level optionRails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"select\", \"style\"])```All users overriding the allowed tags by any of the above mechanisms to include both \"select\" and \"style\" should either upgrade or use one of the workarounds immediately.## ReleasesThe FIXED releases are available at the normal locations.## WorkaroundsRemove either `select` or `style` from the overridden allowed tags.## CreditsThis vulnerability was responsibly reported by [windshock](https://hackerone.com/windshock?type=user).",
    "A Cross-site scripting (XSS) vulnerability exists in ruby on rails. This issue could allow an attacker to inject content into the application, leading to loss of integrity and confidentiality."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2022-32209\nhttps://nvd.nist.gov/vuln/detail/CVE-2022-32209"
  ]
}