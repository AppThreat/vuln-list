{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-02-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: dm rq: fix double free of blk_mq_tag_set in dev remove after table load fails",
    "id": "2266499",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2266499"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "6.7",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-415",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-46938",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\ndm rq: fix double free of blk_mq_tag_set in dev remove after table load fails\nWhen loading a device-mapper table for a request-based mapped device,\nand the allocation/initialization of the blk_mq_tag_set for the device\nfails, a following device remove will cause a double free.\nE.g. (dmesg):\ndevice-mapper: core: Cannot initialize queue for request-based dm-mq mapped device\ndevice-mapper: ioctl: unable to set up device queue for new table.\nUnable to handle kernel pointer dereference in virtual kernel address space\nFailing address: 0305e098835de000 TEID: 0305e098835de803\nFault in home space mode while using kernel ASCE.\nAS:000000025efe0007 R3:0000000000000024\nOops: 0038 ilc:3 [#1] SMP\nModules linked in: ... lots of modules ...\nSupported: Yes, External\nCPU: 0 PID: 7348 Comm: multipathd Kdump: loaded Tainted: G        W      X    5.3.18-53-default #1 SLE15-SP3\nHardware name: IBM 8561 T01 7I2 (LPAR)\nKrnl PSW : 0704e00180000000 000000025e368eca (kfree+0x42/0x330)\nR:0 T:1 IO:1 EX:1 Key:0 M:1 W:0 P:0 AS:3 CC:2 PM:0 RI:0 EA:3\nKrnl GPRS: 000000000000004a 000000025efe5230 c1773200d779968d 0000000000000000\n000000025e520270 000000025e8d1b40 0000000000000003 00000007aae10000\n000000025e5202a2 0000000000000001 c1773200d779968d 0305e098835de640\n00000007a8170000 000003ff80138650 000000025e5202a2 000003e00396faa8\nKrnl Code: 000000025e368eb8: c4180041e100       lgrl    %r1,25eba50b8\n000000025e368ebe: ecba06b93a55       risbg   %r11,%r10,6,185,58\n#000000025e368ec4: e3b010000008       ag      %r11,0(%r1)\n\u003e000000025e368eca: e310b0080004       lg      %r1,8(%r11)\n000000025e368ed0: a7110001           tmll    %r1,1\n000000025e368ed4: a7740129           brc     7,25e369126\n000000025e368ed8: e320b0080004       lg      %r2,8(%r11)\n000000025e368ede: b904001b           lgr     %r1,%r11\nCall Trace:\n[\u003c000000025e368eca\u003e] kfree+0x42/0x330\n[\u003c000000025e5202a2\u003e] blk_mq_free_tag_set+0x72/0xb8\n[\u003c000003ff801316a8\u003e] dm_mq_cleanup_mapped_device+0x38/0x50 [dm_mod]\n[\u003c000003ff80120082\u003e] free_dev+0x52/0xd0 [dm_mod]\n[\u003c000003ff801233f0\u003e] __dm_destroy+0x150/0x1d0 [dm_mod]\n[\u003c000003ff8012bb9a\u003e] dev_remove+0x162/0x1c0 [dm_mod]\n[\u003c000003ff8012a988\u003e] ctl_ioctl+0x198/0x478 [dm_mod]\n[\u003c000003ff8012ac8a\u003e] dm_ctl_ioctl+0x22/0x38 [dm_mod]\n[\u003c000000025e3b11ee\u003e] ksys_ioctl+0xbe/0xe0\n[\u003c000000025e3b127a\u003e] __s390x_sys_ioctl+0x2a/0x40\n[\u003c000000025e8c15ac\u003e] system_call+0xd8/0x2c8\nLast Breaking-Event-Address:\n[\u003c000000025e52029c\u003e] blk_mq_free_tag_set+0x6c/0xb8\nKernel panic - not syncing: Fatal exception: panic_on_oops\nWhen allocation/initialization of the blk_mq_tag_set fails in\ndm_mq_init_request_queue(), it is uninitialized/freed, but the pointer\nis not reset to NULL; so when dev_remove() later gets into\ndm_mq_cleanup_mapped_device() it sees the pointer and tries to\nuninitialize and free it again.\nFix this by setting the pointer to NULL in dm_mq_init_request_queue()\nerror-handling. Also set it to NULL in dm_mq_cleanup_mapped_device()."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-46938\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-46938\nhttps://lore.kernel.org/linux-cve-announce/20240227184057.2368370-3-gregkh@linuxfoundation.org/T/#u"
  ]
}