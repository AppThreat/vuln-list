{
  "affected_release": [
    {
      "product_name": "OpenShift Service Mesh 1.1",
      "release_date": "2021-08-25T00:00:00Z",
      "advisory": "RHSA-2021:3273",
      "package": "servicemesh-proxy-0:1.1.17-2.el8",
      "cpe": "cpe:/a:redhat:service_mesh:1.1::el8"
    },
    {
      "product_name": "OpenShift Service Mesh 2.0",
      "release_date": "2021-08-25T00:00:00Z",
      "advisory": "RHSA-2021:3272",
      "package": "servicemesh-proxy-0:2.0.7-3.el8",
      "cpe": "cpe:/a:redhat:service_mesh:2.0::el8"
    }
  ],
  "package_state": null,
  "threat_severity": "Important",
  "public_date": "2021-08-24T19:00:00Z",
  "bugzilla": {
    "description": "envoyproxy/envoy: HTTP request with a URL fragment in the URI can bypass authorization policies",
    "id": "1996934",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1996934"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "8.3",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:L",
    "status": "verified"
  },
  "iava": "",
  "cwe": "CWE-863",
  "statement": "",
  "acknowledgement": "Red Hat would like to thank the Envoy Security Team for reporting this issue.",
  "name": "CVE-2021-32779",
  "document_distribution": "",
  "details": [
    "Envoy is an open source L7 proxy and communication bus designed for large modern service oriented architectures. In affected versions envoy incorrectly handled a URI '#fragment' element as part of the path element. Envoy is configured with an RBAC filter for authorization or similar mechanism with an explicit case of a final \"/admin\" path element, or is using a negative assertion with final path element of \"/admin\". The client sends request to \"/app1/admin#foo\". In Envoy prior to 1.18.0, or 1.18.0+ configured with path_normalization=false. Envoy treats fragment as a suffix of the query string when present, or as a suffix of the path when query string is absent, so it evaluates the final path element as \"/admin#foo\" and mismatches with the configured \"/admin\" path element. In Envoy 1.18.0+ configured with path_normalization=true. Envoy transforms this to /app1/admin%23foo and mismatches with the configured /admin prefix. The resulting URI is sent to the next server-agent with the offending \"#foo\" fragment which violates RFC3986 or with the nonsensical \"%23foo\" text appended. A specifically constructed request with URI containing '#fragment' element delivered by an untrusted client in the presence of path based request authorization resulting in escalation of Privileges when path based request authorization extensions. Envoy versions 1.19.1, 1.18.4, 1.17.4, 1.16.5 contain fixes that removes fragment from URI path in incoming requests.",
    "An authorization bypass vulnerability was found in envoyproxy/envoy. When a URI path-based authorization policy is specified, envoy incorrectly evaluates the HTTP request which contains a URI #fragment. This flaw allows an attacker to bypass the authorization policy and access downstream services. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-32779\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-32779\nhttps://istio.io/latest/news/security/istio-security-2021-008/"
  ]
}