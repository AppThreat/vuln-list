{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-02-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: locking/qrwlock: Fix ordering in queued_write_lock_slowpath()",
    "id": "2266440",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2266440"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "4.4",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:N/A:N",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-402",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-46921",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nlocking/qrwlock: Fix ordering in queued_write_lock_slowpath()\nWhile this code is executed with the wait_lock held, a reader can\nacquire the lock without holding wait_lock.  The writer side loops\nchecking the value with the atomic_cond_read_acquire(), but only truly\nacquires the lock when the compare-and-exchange is completed\nsuccessfully which isnâ€™t ordered. This exposes the window between the\nacquire and the cmpxchg to an A-B-A problem which allows reads\nfollowing the lock acquisition to observe values speculatively before\nthe write lock is truly acquired.\nWe've seen a problem in epoll where the reader does a xchg while\nholding the read lock, but the writer can see a value change out from\nunder it.\nWriter                                | Reader\n--------------------------------------------------------------------------------\nep_scan_ready_list()                  |\n|- write_lock_irq()                   |\n|- queued_write_lock_slowpath()   |\n|- atomic_cond_read_acquire()   |\n| read_lock_irqsave(\u0026ep-\u003elock, flags);\n--\u003e (observes value before unlock) |  chain_epi_lockless()\n|                                  |    epi-\u003enext = xchg(\u0026ep-\u003eovflist, epi);\n|                                  | read_unlock_irqrestore(\u0026ep-\u003elock, flags);\n|                                  |\n|     atomic_cmpxchg_relaxed()     |\n|-- READ_ONCE(ep-\u003eovflist);        |\nA core can order the read of the ovflist ahead of the\natomic_cmpxchg_relaxed(). Switching the cmpxchg to use acquire\nsemantics addresses this issue at which point the atomic_cond_read can\nbe switched to use relaxed semantics.\n[peterz: use try_cmpxchg()]"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-46921\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-46921\nhttps://lore.kernel.org/linux-cve-announce/2024022732-CVE-2021-46921-91dc@gregkh/T/#u"
  ]
}