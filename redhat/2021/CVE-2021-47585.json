{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-06-19T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: fix memory leak in __add_inode_ref()",
    "id": "2293243",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2293243"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-47585",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: fix memory leak in __add_inode_ref()\nLine 1169 (#3) allocates a memory chunk for victim_name by kmalloc(),\nbut  when the function returns in line 1184 (#4) victim_name allocated\nby line 1169 (#3) is not freed, which will lead to a memory leak.\nThere is a similar snippet of code in this function as allocating a memory\nchunk for victim_name in line 1104 (#1) as well as releasing the memory\nin line 1116 (#2).\nWe should kfree() victim_name when the return value of backref_in_log()\nis less than zero and before the function returns in line 1184 (#4).\n1057 static inline int __add_inode_ref(struct btrfs_trans_handle *trans,\n1058   struct btrfs_root *root,\n1059   struct btrfs_path *path,\n1060   struct btrfs_root *log_root,\n1061   struct btrfs_inode *dir,\n1062   struct btrfs_inode *inode,\n1063   u64 inode_objectid, u64 parent_objectid,\n1064   u64 ref_index, char *name, int namelen,\n1065   int *search_done)\n1066 {\n1104 victim_name = kmalloc(victim_name_len, GFP_NOFS);\n// #1: kmalloc (victim_name-1)\n1105 if (!victim_name)\n1106 return -ENOMEM;\n1112ret = backref_in_log(log_root, \u0026search_key,\n1113parent_objectid, victim_name,\n1114victim_name_len);\n1115if (ret \u003c 0) {\n1116kfree(victim_name); // #2: kfree (victim_name-1)\n1117return ret;\n1118} else if (!ret) {\n1169 victim_name = kmalloc(victim_name_len, GFP_NOFS);\n// #3: kmalloc (victim_name-2)\n1170 if (!victim_name)\n1171 return -ENOMEM;\n1180 ret = backref_in_log(log_root, \u0026search_key,\n1181 parent_objectid, victim_name,\n1182 victim_name_len);\n1183 if (ret \u003c 0) {\n1184 return ret; // #4: missing kfree (victim_name-2)\n1185 } else if (!ret) {\n1241 return 0;\n1242 }"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-47585\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-47585\nhttps://lore.kernel.org/linux-cve-announce/2024061917-CVE-2021-47585-0a6a@gregkh/T"
  ]
}