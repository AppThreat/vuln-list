{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-05-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: RDMA/cma: Ensure rdma_addr_cancel() happens before issuing more requests",
    "id": "2282349",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2282349"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-47391",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nRDMA/cma: Ensure rdma_addr_cancel() happens before issuing more requests\nThe FSM can run in a circle allowing rdma_resolve_ip() to be called twice\non the same id_priv. While this cannot happen without going through the\nwork, it violates the invariant that the same address resolution\nbackground request cannot be active twice.\nCPU 1                                  CPU 2\nrdma_resolve_addr():\nRDMA_CM_IDLE -\u003e RDMA_CM_ADDR_QUERY\nrdma_resolve_ip(addr_handler)  #1\nprocess_one_req(): for #1\naddr_handler():\nRDMA_CM_ADDR_QUERY -\u003e RDMA_CM_ADDR_BOUND\nmutex_unlock(\u0026id_priv-\u003ehandler_mutex);\n[.. handler still running ..]\nrdma_resolve_addr():\nRDMA_CM_ADDR_BOUND -\u003e RDMA_CM_ADDR_QUERY\nrdma_resolve_ip(addr_handler)\n!! two requests are now on the req_list\nrdma_destroy_id():\ndestroy_id_handler_unlock():\n_destroy_id():\ncma_cancel_operation():\nrdma_addr_cancel()\n// process_one_req() self removes it\nspin_lock_bh(\u0026lock);\ncancel_delayed_work(\u0026req-\u003ework);\nif (!list_empty(\u0026req-\u003elist)) == true\n! rdma_addr_cancel() returns after process_on_req #1 is done\nkfree(id_priv)\nprocess_one_req(): for #2\naddr_handler():\nmutex_lock(\u0026id_priv-\u003ehandler_mutex);\n!! Use after free on id_priv\nrdma_addr_cancel() expects there to be one req on the list and only\ncancels the first one. The self-removal behavior of the work only happens\nafter the handler has returned. This yields a situations where the\nreq_list can have two reqs for the same \"handle\" but rdma_addr_cancel()\nonly cancels the first one.\nThe second req remains active beyond rdma_destroy_id() and will\nuse-after-free id_priv once it inevitably triggers.\nFix this by remembering if the id_priv has called rdma_resolve_ip() and\nalways cancel before calling it again. This ensures the req_list never\ngets more than one item in it and doesn't cost anything in the normal flow\nthat never uses this strange error path."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-47391\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-47391\nhttps://lore.kernel.org/linux-cve-announce/2024052146-CVE-2021-47391-45fb@gregkh/T"
  ]
}