{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-05-21T00:00:00Z",
  "bugzilla": {
    "description": "kernel: bpf: Track subprog poke descriptors correctly and fix use-after-free",
    "id": "2282480",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2282480"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-47303",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbpf: Track subprog poke descriptors correctly and fix use-after-free\nSubprograms are calling map_poke_track(), but on program release there is no\nhook to call map_poke_untrack(). However, on program release, the aux memory\n(and poke descriptor table) is freed even though we still have a reference to\nit in the element list of the map aux data. When we run map_poke_run(), we then\nend up accessing free'd memory, triggering KASAN in prog_array_map_poke_run():\n[...]\n[  402.824689] BUG: KASAN: use-after-free in prog_array_map_poke_run+0xc2/0x34e\n[  402.824698] Read of size 4 at addr ffff8881905a7940 by task hubble-fgs/4337\n[  402.824705] CPU: 1 PID: 4337 Comm: hubble-fgs Tainted: G          I       5.12.0+ #399\n[  402.824715] Call Trace:\n[  402.824719]  dump_stack+0x93/0xc2\n[  402.824727]  print_address_description.constprop.0+0x1a/0x140\n[  402.824736]  ? prog_array_map_poke_run+0xc2/0x34e\n[  402.824740]  ? prog_array_map_poke_run+0xc2/0x34e\n[  402.824744]  kasan_report.cold+0x7c/0xd8\n[  402.824752]  ? prog_array_map_poke_run+0xc2/0x34e\n[  402.824757]  prog_array_map_poke_run+0xc2/0x34e\n[  402.824765]  bpf_fd_array_map_update_elem+0x124/0x1a0\n[...]\nThe elements concerned are walked as follows:\nfor (i = 0; i \u003c elem-\u003eaux-\u003esize_poke_tab; i++) {\npoke = \u0026elem-\u003eaux-\u003epoke_tab[i];\n[...]\nThe access to size_poke_tab is a 4 byte read, verified by checking offsets\nin the KASAN dump:\n[  402.825004] The buggy address belongs to the object at ffff8881905a7800\nwhich belongs to the cache kmalloc-1k of size 1024\n[  402.825008] The buggy address is located 320 bytes inside of\n1024-byte region [ffff8881905a7800, ffff8881905a7c00)\nThe pahole output of bpf_prog_aux:\nstruct bpf_prog_aux {\n[...]\n/* --- cacheline 5 boundary (320 bytes) --- */\nu32                        size_poke_tab;        /*   320     4 */\n[...]\nIn general, subprograms do not necessarily manage their own data structures.\nFor example, BTF func_info and linfo are just pointers to the main program\nstructure. This allows reference counting and cleanup to be done on the latter\nwhich simplifies their management a bit. The aux-\u003epoke_tab struct, however,\ndid not follow this logic. The initial proposed fix for this use-after-free\nbug further embedded poke data tracking into the subprogram with proper\nreference counting. However, Daniel and Alexei questioned why we were treating\nthese objects special; I agree, its unnecessary. The fix here removes the per\nsubprogram poke table allocation and map tracking and instead simply points\nthe aux-\u003epoke_tab pointer at the main programs poke table. This way, map\ntracking is simplified to the main program and we do not need to manage them\nper subprogram.\nThis also means, bpf_prog_free_deferred(), which unwinds the program reference\ncounting and kfrees objects, needs to ensure that we don't try to double free\nthe poke_tab when free'ing the subprog structures. This is easily solved by\nNULL'ing the poke_tab pointer. The second detail is to ensure that per\nsubprogram JIT logic only does fixups on poke_tab[] entries it owns. To do\nthis, we add a pointer in the poke structure to point at the subprogram value\nso JITs can easily check while walking the poke_tab structure if the current\nentry belongs to the current program. The aux pointer is stable and therefore\nsuitable for such comparison. On the jit_subprogs() error path, we omit\ncleaning up the poke-\u003eaux field because these are only ever referenced from\nthe JIT side, but on error we will never make it to the JIT, so its fine to\nleave them dangling. Removing these pointers would complicate the error path\nfor no reason. However, we do need to untrack all poke descriptors from the\nmain program as otherwise they could race with the freeing of JIT memory from\nthe subprograms. Lastly, a748c6975dea3 (\"bpf: propagate poke des\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-47303\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-47303\nhttps://lore.kernel.org/linux-cve-announce/2024052126-CVE-2021-47303-72dc@gregkh/T"
  ]
}