{
  "mitigation": "null",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-05-24T00:00:00Z",
  "bugzilla": {
    "description": "kernel: tcp: fix page frag corruption on page fault",
    "id": "2283406",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2283406"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-47544",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\ntcp: fix page frag corruption on page fault\nSteffen reported a TCP stream corruption for HTTP requests\nserved by the apache web-server using a cifs mount-point\nand memory mapping the relevant file.\nThe root cause is quite similar to the one addressed by\ncommit 20eb4f29b602 (\"net: fix sk_page_frag() recursion from\nmemory reclaim\"). Here the nested access to the task page frag\nis caused by a page fault on the (mmapped) user-space memory\nbuffer coming from the cifs file.\nThe page fault handler performs an smb transaction on a different\nsocket, inside the same process context. Since sk-\u003esk_allaction\nfor such socket does not prevent the usage for the task_frag,\nthe nested allocation modify \"under the hood\" the page frag\nin use by the outer sendmsg call, corrupting the stream.\nThe overall relevant stack trace looks like the following:\nhttpd 78268 [001] 3461630.850950:      probe:tcp_sendmsg_locked:\nffffffff91461d91 tcp_sendmsg_locked+0x1\nffffffff91462b57 tcp_sendmsg+0x27\nffffffff9139814e sock_sendmsg+0x3e\nffffffffc06dfe1d smb_send_kvec+0x28\n[...]\nffffffffc06cfaf8 cifs_readpages+0x213\nffffffff90e83c4b read_pages+0x6b\nffffffff90e83f31 __do_page_cache_readahead+0x1c1\nffffffff90e79e98 filemap_fault+0x788\nffffffff90eb0458 __do_fault+0x38\nffffffff90eb5280 do_fault+0x1a0\nffffffff90eb7c84 __handle_mm_fault+0x4d4\nffffffff90eb8093 handle_mm_fault+0xc3\nffffffff90c74f6d __do_page_fault+0x1ed\nffffffff90c75277 do_page_fault+0x37\nffffffff9160111e page_fault+0x1e\nffffffff9109e7b5 copyin+0x25\nffffffff9109eb40 _copy_from_iter_full+0xe0\nffffffff91462370 tcp_sendmsg_locked+0x5e0\nffffffff91462370 tcp_sendmsg_locked+0x5e0\nffffffff91462b57 tcp_sendmsg+0x27\nffffffff9139815c sock_sendmsg+0x4c\nffffffff913981f7 sock_write_iter+0x97\nffffffff90f2cc56 do_iter_readv_writev+0x156\nffffffff90f2dff0 do_iter_write+0x80\nffffffff90f2e1c3 vfs_writev+0xa3\nffffffff90f2e27c do_writev+0x5c\nffffffff90c042bb do_syscall_64+0x5b\nffffffff916000ad entry_SYSCALL_64_after_hwframe+0x65\nThe cifs filesystem rightfully sets sk_allocations to GFP_NOFS,\nwe can avoid the nesting using the sk page frag for allocation\nlacking the __GFP_FS flag. Do not define an additional mm-helper\nfor that, as this is strictly tied to the sk page frag usage.\nv1 -\u003e v2:\n- use a stricted sk_page_frag() check instead of reordering the\ncode (Eric)"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-47544\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-47544\nhttps://lore.kernel.org/linux-cve-announce/2024052440-CVE-2021-47544-ceb5@gregkh/T"
  ]
}