{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Under investigation",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Under investigation",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Under investigation",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Under investigation",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Under investigation",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Under investigation",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Under investigation",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-02-27T00:00:00Z",
  "bugzilla": {
    "description": "kernel: kmap_local() doubles the number of per-CPU",
    "id": "2266414",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2266414"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "",
    "cvss3_scoring_vector": "",
    "status": ""
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-46910",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nARM: 9063/1: mm: reduce maximum number of CPUs if DEBUG_KMAP_LOCAL is enabled\nThe debugging code for kmap_local() doubles the number of per-CPU fixmap\nslots allocated for kmap_local(), in order to use half of them as guard\nregions. This causes the fixmap region to grow downwards beyond the start\nof its reserved window if the supported number of CPUs is large, and collide\nwith the newly added virtual DT mapping right below it, which is obviously\nnot good.\nOne manifestation of this is EFI boot on a kernel built with NR_CPUS=32\nand CONFIG_DEBUG_KMAP_LOCAL=y, which may pass the FDT in highmem, resulting\nin block entries below the fixmap region that the fixmap code misidentifies\nas fixmap table entries, and subsequently tries to dereference using a\nphys-to-virt translation that is only valid for lowmem. This results in a\ncryptic splat such as the one below.\nftrace: allocating 45548 entries in 89 pages\n8\u003c--- cut here ---\nUnable to handle kernel paging request at virtual address fc6006f0\npgd = (ptrval)\n[fc6006f0] *pgd=80000040207003, *pmd=00000000\nInternal error: Oops: a06 [#1] SMP ARM\nModules linked in:\nCPU: 0 PID: 0 Comm: swapper Not tainted 5.11.0+ #382\nHardware name: Generic DT based system\nPC is at cpu_ca15_set_pte_ext+0x24/0x30\nLR is at __set_fixmap+0xe4/0x118\npc : [\u003cc041ac9c\u003e]    lr : [\u003cc04189d8\u003e]    psr: 400000d3\nsp : c1601ed8  ip : 00400000  fp : 00800000\nr10: 0000071f  r9 : 00421000  r8 : 00c00000\nr7 : 00c00000  r6 : 0000071f  r5 : ffade000  r4 : 4040171f\nr3 : 00c00000  r2 : 4040171f  r1 : c041ac78  r0 : fc6006f0\nFlags: nZcv  IRQs off  FIQs off  Mode SVC_32  ISA ARM  Segment none\nControl: 30c5387d  Table: 40203000  DAC: 00000001\nProcess swapper (pid: 0, stack limit = 0x(ptrval))\nSo let's limit CONFIG_NR_CPUS to 16 when CONFIG_DEBUG_KMAP_LOCAL=y. Also,\nfix the BUILD_BUG_ON() check that was supposed to catch this, by checking\nwhether the region grows below the start address rather than above the end\naddress.",
    "A flaw was found in kmap_local() in the Linux Kernel that doubles the number of per-CPU fixmap slots allocated for kmap_local(). This causes the fixmap region to grow downwards beyond the start of its reserved window if the supported number of CPUs is large, eventually colliding with the newly added virtual DT mapping below it."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-46910\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-46910\nhttps://git.kernel.org/stable/c/5965ac11b1d5fcb38464728931649cd9df79c7c9\nhttps://git.kernel.org/stable/c/d624833f5984d484c5e3196f34b926f9e71dafee"
  ]
}