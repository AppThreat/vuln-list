{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-06-20T00:00:00Z",
  "bugzilla": {
    "description": "kernel: ARM: 9170/1: fix panic when kasan and kprobe are enabled",
    "id": "2293295",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2293295"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "4.4",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-99",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2021-47618",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nARM: 9170/1: fix panic when kasan and kprobe are enabled\narm32 uses software to simulate the instruction replaced\nby kprobe. some instructions may be simulated by constructing\nassembly functions. therefore, before executing instruction\nsimulation, it is necessary to construct assembly function\nexecution environment in C language through binding registers.\nafter kasan is enabled, the register binding relationship will\nbe destroyed, resulting in instruction simulation errors and\ncausing kernel panic.\nthe kprobe emulate instruction function is distributed in three\nfiles: actions-common.c actions-arm.c actions-thumb.c, so disable\nKASAN when compiling these files.\nfor example, use kprobe insert on cap_capable+20 after kasan\nenabled, the cap_capable assembly code is as follows:\n\u003ccap_capable\u003e:\ne92d47f0push{r4, r5, r6, r7, r8, r9, sl, lr}\ne1a05000movr5, r0\ne280006caddr0, r0, #108    ; 0x6c\ne1a04001movr4, r1\ne1a06002movr6, r2\ne59fa090ldrsl, [pc, #144]  ;\nebfc7bf8blc03aa4b4 \u003c__asan_load4\u003e\ne595706cldrr7, [r5, #108]  ; 0x6c\ne2859014addr9, r5, #20\n......\nThe emulate_ldr assembly code after enabling kasan is as follows:\nc06f1384 \u003cemulate_ldr\u003e:\ne92d47f0push{r4, r5, r6, r7, r8, r9, sl, lr}\ne282803caddr8, r2, #60     ; 0x3c\ne1a05000movr5, r0\ne7e37855ubfxr7, r5, #16, #4\ne1a00008movr0, r8\ne1a09001movr9, r1\ne1a04002movr4, r2\nebf35462blc03c6530 \u003c__asan_load4\u003e\ne357000fcmpr7, #15\ne7e36655ubfxr6, r5, #12, #4\ne205a00fandsl, r5, #15\n0a000001beqc06f13bc \u003cemulate_ldr+0x38\u003e\ne0840107addr0, r4, r7, lsl #2\nebf3545cblc03c6530 \u003c__asan_load4\u003e\ne084010aaddr0, r4, sl, lsl #2\nebf3545ablc03c6530 \u003c__asan_load4\u003e\ne2890010addr0, r9, #16\nebf35458blc03c6530 \u003c__asan_load4\u003e\ne5990010ldrr0, [r9, #16]\ne12fff30blxr0\ne356000fcmr6, #15\n1a000014bnec06f1430 \u003cemulate_ldr+0xac\u003e\ne1a06000movr6, r0\ne2840040addr0, r4, #64     ; 0x40\n......\nwhen running in emulate_ldr to simulate the ldr instruction, panic\noccurred, and the log is as follows:\nUnable to handle kernel NULL pointer dereference at virtual address\n00000090\npgd = ecb46400\n[00000090] *pgd=2e0fa003, *pmd=00000000\nInternal error: Oops: 206 [#1] SMP ARM\nPC is at cap_capable+0x14/0xb0\nLR is at emulate_ldr+0x50/0xc0\npsr: 600d0293 sp : ecd63af8  ip : 00000004  fp : c0a7c30c\nr10: 00000000  r9 : c30897f4  r8 : ecd63cd4\nr7 : 0000000f  r6 : 0000000a  r5 : e59fa090  r4 : ecd63c98\nr3 : c06ae294  r2 : 00000000  r1 : b7611300  r0 : bf4ec008\nFlags: nZCv  IRQs off  FIQs on  Mode SVC_32  ISA ARM  Segment user\nControl: 32c5387d  Table: 2d546400  DAC: 55555555\nProcess bash (pid: 1643, stack limit = 0xecd60190)\n(cap_capable) from (kprobe_handler+0x218/0x340)\n(kprobe_handler) from (kprobe_trap_handler+0x24/0x48)\n(kprobe_trap_handler) from (do_undefinstr+0x13c/0x364)\n(do_undefinstr) from (__und_svc_finish+0x0/0x30)\n(__und_svc_finish) from (cap_capable+0x18/0xb0)\n(cap_capable) from (cap_vm_enough_memory+0x38/0x48)\n(cap_vm_enough_memory) from\n(security_vm_enough_memory_mm+0x48/0x6c)\n(security_vm_enough_memory_mm) from\n(copy_process.constprop.5+0x16b4/0x25c8)\n(copy_process.constprop.5) from (_do_fork+0xe8/0x55c)\n(_do_fork) from (SyS_clone+0x1c/0x24)\n(SyS_clone) from (__sys_trace_return+0x0/0x10)\nCode: 0050a0e1 6c0080e2 0140a0e1 0260a0e1 (f801f0e7)"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2021-47618\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-47618\nhttps://lore.kernel.org/linux-cve-announce/2024062007-CVE-2021-47618-fd65@gregkh/T"
  ]
}