{
  "mitigation": "null",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-05-19T00:00:00Z",
  "bugzilla": {
    "description": "kernel: riscv: Fix vector state restore in rt_sigreturn()",
    "id": "2281734",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2281734"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-35873",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nriscv: Fix vector state restore in rt_sigreturn()\nThe RISC-V Vector specification states in \"Appendix D: Calling\nConvention for Vector State\" [1] that \"Executing a system call causes\nall caller-saved vector registers (v0-v31, vl, vtype) and vstart to\nbecome unspecified.\". In the RISC-V kernel this is called \"discarding\nthe vstate\".\nReturning from a signal handler via the rt_sigreturn() syscall, vector\ndiscard is also performed. However, this is not an issue since the\nvector state should be restored from the sigcontext, and therefore not\ncare about the vector discard.\nThe \"live state\" is the actual vector register in the running context,\nand the \"vstate\" is the vector state of the task. A dirty live state,\nmeans that the vstate and live state are not in synch.\nWhen vectorized user_from_copy() was introduced, an bug sneaked in at\nthe restoration code, related to the discard of the live state.\nAn example when this go wrong:\n1. A userland application is executing vector code\n2. The application receives a signal, and the signal handler is\nentered.\n3. The application returns from the signal handler, using the\nrt_sigreturn() syscall.\n4. The live vector state is discarded upon entering the\nrt_sigreturn(), and the live state is marked as \"dirty\", indicating\nthat the live state need to be synchronized with the current\nvstate.\n5. rt_sigreturn() restores the vstate, except the Vector registers,\nfrom the sigcontext\n6. rt_sigreturn() restores the Vector registers, from the sigcontext,\nand now the vectorized user_from_copy() is used. The dirty live\nstate from the discard is saved to the vstate, making the vstate\ncorrupt.\n7. rt_sigreturn() returns to the application, which crashes due to\ncorrupted vstate.\nNote that the vectorized user_from_copy() is invoked depending on the\nvalue of CONFIG_RISCV_ISA_V_UCOPY_THRESHOLD. Default is 768, which\nmeans that vlen has to be larger than 128b for this bug to trigger.\nThe fix is simply to mark the live state as non-dirty/clean prior\nperforming the vstate restore."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-35873\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-35873\nhttps://lore.kernel.org/linux-cve-announce/2024051942-CVE-2024-35873-40f1@gregkh/T"
  ]
}