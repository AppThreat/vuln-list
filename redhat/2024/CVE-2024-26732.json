{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-04-03T00:00:00Z",
  "bugzilla": {
    "description": "kernel: net: implement lockless setsockopt(SO_PEEK_OFF)",
    "id": "2273250",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2273250"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-26732",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nnet: implement lockless setsockopt(SO_PEEK_OFF)\nsyzbot reported a lockdep violation [1] involving af_unix\nsupport of SO_PEEK_OFF.\nSince SO_PEEK_OFF is inherently not thread safe (it uses a per-socket\nsk_peek_off field), there is really no point to enforce a pointless\nthread safety in the kernel.\nAfter this patch :\n- setsockopt(SO_PEEK_OFF) no longer acquires the socket lock.\n- skb_consume_udp() no longer has to acquire the socket lock.\n- af_unix no longer needs a special version of sk_set_peek_off(),\nbecause it does not lock u-\u003eiolock anymore.\nAs a followup, we could replace prot-\u003eset_peek_off to be a boolean\nand avoid an indirect call, since we always use sk_set_peek_off().\n[1]\nWARNING: possible circular locking dependency detected\n6.8.0-rc4-syzkaller-00267-g0f1dd5e91e2b #0 Not tainted\nsyz-executor.2/30025 is trying to acquire lock:\nffff8880765e7d80 (\u0026u-\u003eiolock){+.+.}-{3:3}, at: unix_set_peek_off+0x26/0xa0 net/unix/af_unix.c:789\nbut task is already holding lock:\nffff8880765e7930 (sk_lock-AF_UNIX){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1691 [inline]\nffff8880765e7930 (sk_lock-AF_UNIX){+.+.}-{0:0}, at: sockopt_lock_sock net/core/sock.c:1060 [inline]\nffff8880765e7930 (sk_lock-AF_UNIX){+.+.}-{0:0}, at: sk_setsockopt+0xe52/0x3360 net/core/sock.c:1193\nwhich lock already depends on the new lock.\nthe existing dependency chain (in reverse order) is:\n-\u003e #1 (sk_lock-AF_UNIX){+.+.}-{0:0}:\nlock_acquire+0x1e3/0x530 kernel/locking/lockdep.c:5754\nlock_sock_nested+0x48/0x100 net/core/sock.c:3524\nlock_sock include/net/sock.h:1691 [inline]\n__unix_dgram_recvmsg+0x1275/0x12c0 net/unix/af_unix.c:2415\nsock_recvmsg_nosec+0x18e/0x1d0 net/socket.c:1046\n____sys_recvmsg+0x3c0/0x470 net/socket.c:2801\n___sys_recvmsg net/socket.c:2845 [inline]\ndo_recvmmsg+0x474/0xae0 net/socket.c:2939\n__sys_recvmmsg net/socket.c:3018 [inline]\n__do_sys_recvmmsg net/socket.c:3041 [inline]\n__se_sys_recvmmsg net/socket.c:3034 [inline]\n__x64_sys_recvmmsg+0x199/0x250 net/socket.c:3034\ndo_syscall_64+0xf9/0x240\nentry_SYSCALL_64_after_hwframe+0x6f/0x77\n-\u003e #0 (\u0026u-\u003eiolock){+.+.}-{3:3}:\ncheck_prev_add kernel/locking/lockdep.c:3134 [inline]\ncheck_prevs_add kernel/locking/lockdep.c:3253 [inline]\nvalidate_chain+0x18ca/0x58e0 kernel/locking/lockdep.c:3869\n__lock_acquire+0x1345/0x1fd0 kernel/locking/lockdep.c:5137\nlock_acquire+0x1e3/0x530 kernel/locking/lockdep.c:5754\n__mutex_lock_common kernel/locking/mutex.c:608 [inline]\n__mutex_lock+0x136/0xd70 kernel/locking/mutex.c:752\nunix_set_peek_off+0x26/0xa0 net/unix/af_unix.c:789\nsk_setsockopt+0x207e/0x3360\ndo_sock_setsockopt+0x2fb/0x720 net/socket.c:2307\n__sys_setsockopt+0x1ad/0x250 net/socket.c:2334\n__do_sys_setsockopt net/socket.c:2343 [inline]\n__se_sys_setsockopt net/socket.c:2340 [inline]\n__x64_sys_setsockopt+0xb5/0xd0 net/socket.c:2340\ndo_syscall_64+0xf9/0x240\nentry_SYSCALL_64_after_hwframe+0x6f/0x77\nother info that might help us debug this:\nPossible unsafe locking scenario:\nCPU0                    CPU1\n----                    ----\nlock(sk_lock-AF_UNIX);\nlock(\u0026u-\u003eiolock);\nlock(sk_lock-AF_UNIX);\nlock(\u0026u-\u003eiolock);\n*** DEADLOCK ***\n1 lock held by syz-executor.2/30025:\n#0: ffff8880765e7930 (sk_lock-AF_UNIX){+.+.}-{0:0}, at: lock_sock include/net/sock.h:1691 [inline]\n#0: ffff8880765e7930 (sk_lock-AF_UNIX){+.+.}-{0:0}, at: sockopt_lock_sock net/core/sock.c:1060 [inline]\n#0: ffff8880765e7930 (sk_lock-AF_UNIX){+.+.}-{0:0}, at: sk_setsockopt+0xe52/0x3360 net/core/sock.c:1193\nstack backtrace:\nCPU: 0 PID: 30025 Comm: syz-executor.2 Not tainted 6.8.0-rc4-syzkaller-00267-g0f1dd5e91e2b #0\nHardware name: Google Google C\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-26732\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-26732\nhttps://lore.kernel.org/linux-cve-announce/2024040358-CVE-2024-26732-8cda@gregkh/T"
  ]
}