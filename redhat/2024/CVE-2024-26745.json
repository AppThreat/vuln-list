{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-04-04T00:00:00Z",
  "bugzilla": {
    "description": "kernel: powerpc/pseries/iommu: IOMMU table is not initialized for kdump over SR-IOV",
    "id": "2273410",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2273410"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-26745",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\npowerpc/pseries/iommu: IOMMU table is not initialized for kdump over SR-IOV\nWhen kdump kernel tries to copy dump data over SR-IOV, LPAR panics due\nto NULL pointer exception:\nKernel attempted to read user page (0) - exploit attempt? (uid: 0)\nBUG: Kernel NULL pointer dereference on read at 0x00000000\nFaulting instruction address: 0xc000000020847ad4\nOops: Kernel access of bad area, sig: 11 [#1]\nLE PAGE_SIZE=64K MMU=Radix SMP NR_CPUS=2048 NUMA pSeries\nModules linked in: mlx5_core(+) vmx_crypto pseries_wdt papr_scm libnvdimm mlxfw tls psample sunrpc fuse overlay squashfs loop\nCPU: 12 PID: 315 Comm: systemd-udevd Not tainted 6.4.0-Test102+ #12\nHardware name: IBM,9080-HEX POWER10 (raw) 0x800200 0xf000006 of:IBM,FW1060.00 (NH1060_008) hv:phyp pSeries\nNIP:  c000000020847ad4 LR: c00000002083b2dc CTR: 00000000006cd18c\nREGS: c000000029162ca0 TRAP: 0300   Not tainted  (6.4.0-Test102+)\nMSR:  800000000280b033 \u003cSF,VEC,VSX,EE,FP,ME,IR,DR,RI,LE\u003e  CR: 48288244  XER: 00000008\nCFAR: c00000002083b2d8 DAR: 0000000000000000 DSISR: 40000000 IRQMASK: 1\n...\nNIP _find_next_zero_bit+0x24/0x110\nLR  bitmap_find_next_zero_area_off+0x5c/0xe0\nCall Trace:\ndev_printk_emit+0x38/0x48 (unreliable)\niommu_area_alloc+0xc4/0x180\niommu_range_alloc+0x1e8/0x580\niommu_alloc+0x60/0x130\niommu_alloc_coherent+0x158/0x2b0\ndma_iommu_alloc_coherent+0x3c/0x50\ndma_alloc_attrs+0x170/0x1f0\nmlx5_cmd_init+0xc0/0x760 [mlx5_core]\nmlx5_function_setup+0xf0/0x510 [mlx5_core]\nmlx5_init_one+0x84/0x210 [mlx5_core]\nprobe_one+0x118/0x2c0 [mlx5_core]\nlocal_pci_probe+0x68/0x110\npci_call_probe+0x68/0x200\npci_device_probe+0xbc/0x1a0\nreally_probe+0x104/0x540\n__driver_probe_device+0xb4/0x230\ndriver_probe_device+0x54/0x130\n__driver_attach+0x158/0x2b0\nbus_for_each_dev+0xa8/0x130\ndriver_attach+0x34/0x50\nbus_add_driver+0x16c/0x300\ndriver_register+0xa4/0x1b0\n__pci_register_driver+0x68/0x80\nmlx5_init+0xb8/0x100 [mlx5_core]\ndo_one_initcall+0x60/0x300\ndo_init_module+0x7c/0x2b0\nAt the time of LPAR dump, before kexec hands over control to kdump\nkernel, DDWs (Dynamic DMA Windows) are scanned and added to the FDT.\nFor the SR-IOV case, default DMA window \"ibm,dma-window\" is removed from\nthe FDT and DDW added, for the device.\nNow, kexec hands over control to the kdump kernel.\nWhen the kdump kernel initializes, PCI busses are scanned and IOMMU\ngroup/tables created, in pci_dma_bus_setup_pSeriesLP(). For the SR-IOV\ncase, there is no \"ibm,dma-window\". The original commit: b1fc44eaa9ba,\nfixes the path where memory is pre-mapped (direct mapped) to the DDW.\nWhen TCEs are direct mapped, there is no need to initialize IOMMU\ntables.\niommu_table_setparms_lpar() only considers \"ibm,dma-window\" property\nwhen initiallizing IOMMU table. In the scenario where TCEs are\ndynamically allocated for SR-IOV, newly created IOMMU table is not\ninitialized. Later, when the device driver tries to enter TCEs for the\nSR-IOV device, NULL pointer execption is thrown from iommu_area_alloc().\nThe fix is to initialize the IOMMU table with DDW property stored in the\nFDT. There are 2 points to remember:\n1. For the dedicated adapter, kdump kernel would encounter both\ndefault and DDW in FDT. In this case, DDW property is used to\ninitialize the IOMMU table.\n2. A DDW could be direct or dynamic mapped. kdump kernel would\ninitialize IOMMU table and mark the existing DDW as\n\"dynamic\". This works fine since, at the time of table\ninitialization, iommu_table_clear() makes some space in the\nDDW, for some predefined number of TCEs which are needed for\nkdump to succeed."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-26745\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-26745\nhttps://lore.kernel.org/linux-cve-announce/2024040454-CVE-2024-26745-fa88@gregkh/T"
  ]
}