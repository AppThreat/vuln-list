{
  "mitigation": "null",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-05-17T00:00:00Z",
  "bugzilla": {
    "description": "kernel: btrfs: fix information leak in btrfs_ioctl_logical_to_ino()",
    "id": "2281263",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2281263"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-35849",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nbtrfs: fix information leak in btrfs_ioctl_logical_to_ino()\nSyzbot reported the following information leak for in\nbtrfs_ioctl_logical_to_ino():\nBUG: KMSAN: kernel-infoleak in instrument_copy_to_user include/linux/instrumented.h:114 [inline]\nBUG: KMSAN: kernel-infoleak in _copy_to_user+0xbc/0x110 lib/usercopy.c:40\ninstrument_copy_to_user include/linux/instrumented.h:114 [inline]\n_copy_to_user+0xbc/0x110 lib/usercopy.c:40\ncopy_to_user include/linux/uaccess.h:191 [inline]\nbtrfs_ioctl_logical_to_ino+0x440/0x750 fs/btrfs/ioctl.c:3499\nbtrfs_ioctl+0x714/0x1260\nvfs_ioctl fs/ioctl.c:51 [inline]\n__do_sys_ioctl fs/ioctl.c:904 [inline]\n__se_sys_ioctl+0x261/0x450 fs/ioctl.c:890\n__x64_sys_ioctl+0x96/0xe0 fs/ioctl.c:890\nx64_sys_call+0x1883/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:17\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x77/0x7f\nUninit was created at:\n__kmalloc_large_node+0x231/0x370 mm/slub.c:3921\n__do_kmalloc_node mm/slub.c:3954 [inline]\n__kmalloc_node+0xb07/0x1060 mm/slub.c:3973\nkmalloc_node include/linux/slab.h:648 [inline]\nkvmalloc_node+0xc0/0x2d0 mm/util.c:634\nkvmalloc include/linux/slab.h:766 [inline]\ninit_data_container+0x49/0x1e0 fs/btrfs/backref.c:2779\nbtrfs_ioctl_logical_to_ino+0x17c/0x750 fs/btrfs/ioctl.c:3480\nbtrfs_ioctl+0x714/0x1260\nvfs_ioctl fs/ioctl.c:51 [inline]\n__do_sys_ioctl fs/ioctl.c:904 [inline]\n__se_sys_ioctl+0x261/0x450 fs/ioctl.c:890\n__x64_sys_ioctl+0x96/0xe0 fs/ioctl.c:890\nx64_sys_call+0x1883/0x3b50 arch/x86/include/generated/asm/syscalls_64.h:17\ndo_syscall_x64 arch/x86/entry/common.c:52 [inline]\ndo_syscall_64+0xcf/0x1e0 arch/x86/entry/common.c:83\nentry_SYSCALL_64_after_hwframe+0x77/0x7f\nBytes 40-65535 of 65536 are uninitialized\nMemory access of size 65536 starts at ffff888045a40000\nThis happens, because we're copying a 'struct btrfs_data_container' back\nto user-space. This btrfs_data_container is allocated in\n'init_data_container()' via kvmalloc(), which does not zero-fill the\nmemory.\nFix this by using kvzalloc() which zeroes out the memory on allocation."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-35849\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-35849\nhttps://lore.kernel.org/linux-cve-announce/2024051739-CVE-2024-35849-d74e@gregkh/T"
  ]
}