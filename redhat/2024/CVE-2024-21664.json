{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "OpenShift Service Mesh 2",
      "fix_state": "Will not fix",
      "package_name": "openshift-service-mesh/istio-cni-rhel8",
      "cpe": "cpe:/a:redhat:service_mesh:2"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-01-09T00:00:00Z",
  "bugzilla": {
    "description": "jwx: parsing JSON serialized payload without protected field can lead to panic",
    "id": "2257608",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2257608"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "7.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-476",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-21664",
  "document_distribution": "",
  "details": [
    "jwx is a Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies. Calling `jws.Parse` with a JSON serialized payload where the `signature` field is present while `protected` is absent can lead to a nil pointer dereference. The vulnerability can be used to crash/DOS a system doing JWS verification. This vulnerability has been patched in versions 2.0.19 and 1.2.28.",
    "A null pointer dereference vulnerability was found in the jwx/jws Go module. This issue arises when invoking \"jws.Parse\" with a JSON serialized payload containing a present signature field while the protected field is absentm, which may cause a system crash or initiate a denial of service (DOS) attack during JWS verification."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-21664\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-21664\nhttps://github.com/lestrrat-go/jwx/security/advisories/GHSA-pvcr-v8j8-j5q3"
  ]
}