{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-04-17T00:00:00Z",
  "bugzilla": {
    "description": "kernel: firmware: arm_scmi: Fix double free in SMC transport cleanup path",
    "id": "2275664",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2275664"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-26893",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nfirmware: arm_scmi: Fix double free in SMC transport cleanup path\nWhen the generic SCMI code tears down a channel, it calls the chan_free\ncallback function, defined by each transport. Since multiple protocols\nmight share the same transport_info member, chan_free() might want to\nclean up the same member multiple times within the given SCMI transport\nimplementation. In this case, it is SMC transport. This will lead to a NULL\npointer dereference at the second time:\n| scmi_protocol scmi_dev.1: Enabled polling mode TX channel - prot_id:16\n| arm-scmi firmware:scmi: SCMI Notifications - Core Enabled.\n| arm-scmi firmware:scmi: unable to communicate with SCMI\n| Unable to handle kernel NULL pointer dereference at virtual address 0000000000000000\n| Mem abort info:\n|   ESR = 0x0000000096000004\n|   EC = 0x25: DABT (current EL), IL = 32 bits\n|   SET = 0, FnV = 0\n|   EA = 0, S1PTW = 0\n|   FSC = 0x04: level 0 translation fault\n| Data abort info:\n|   ISV = 0, ISS = 0x00000004, ISS2 = 0x00000000\n|   CM = 0, WnR = 0, TnD = 0, TagAccess = 0\n|   GCS = 0, Overlay = 0, DirtyBit = 0, Xs = 0\n| user pgtable: 4k pages, 48-bit VAs, pgdp=0000000881ef8000\n| [0000000000000000] pgd=0000000000000000, p4d=0000000000000000\n| Internal error: Oops: 0000000096000004 [#1] PREEMPT SMP\n| Modules linked in:\n| CPU: 4 PID: 1 Comm: swapper/0 Not tainted 6.7.0-rc2-00124-g455ef3d016c9-dirty #793\n| Hardware name: FVP Base RevC (DT)\n| pstate: 61400009 (nZCv daif +PAN -UAO -TCO +DIT -SSBS BTYPE=--)\n| pc : smc_chan_free+0x3c/0x6c\n| lr : smc_chan_free+0x3c/0x6c\n| Call trace:\n|  smc_chan_free+0x3c/0x6c\n|  idr_for_each+0x68/0xf8\n|  scmi_cleanup_channels.isra.0+0x2c/0x58\n|  scmi_probe+0x434/0x734\n|  platform_probe+0x68/0xd8\n|  really_probe+0x110/0x27c\n|  __driver_probe_device+0x78/0x12c\n|  driver_probe_device+0x3c/0x118\n|  __driver_attach+0x74/0x128\n|  bus_for_each_dev+0x78/0xe0\n|  driver_attach+0x24/0x30\n|  bus_add_driver+0xe4/0x1e8\n|  driver_register+0x60/0x128\n|  __platform_driver_register+0x28/0x34\n|  scmi_driver_init+0x84/0xc0\n|  do_one_initcall+0x78/0x33c\n|  kernel_init_freeable+0x2b8/0x51c\n|  kernel_init+0x24/0x130\n|  ret_from_fork+0x10/0x20\n| Code: f0004701 910a0021 aa1403e5 97b91c70 (b9400280)\n| ---[ end trace 0000000000000000 ]---\nSimply check for the struct pointer being NULL before trying to access\nits members, to avoid this situation.\nThis was found when a transport doesn't really work (for instance no SMC\nservice), the probe routines then tries to clean up, and triggers a crash."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-26893\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-26893\nhttps://lore.kernel.org/linux-cve-announce/2024041743-CVE-2024-26893-34df@gregkh/T"
  ]
}