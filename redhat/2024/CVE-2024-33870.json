{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "ghostscript",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "ghostscript",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "ghostscript",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Affected",
      "package_name": "gimp:flatpak/ghostscript",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Affected",
      "package_name": "ghostscript",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-05-16T00:00:00Z",
  "bugzilla": {
    "description": "ghostscript: path traversal to arbitrary files if the current directory is in the permitted paths",
    "id": "2293959",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2293959"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "6.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:L",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-23",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-33870",
  "document_distribution": "",
  "details": [
    "A flaw was found in Ghostscript. When the `gp_validate_path_len` function validates a path, it distinguishes between absolute and relative paths. In the case of relative paths, it will check the path with and without the current-directory-prefix (\"foo\" and \"./foo\"). This does not take into account paths with a parent-directory-prefix. Therefore, a path like \"../../foo\" is also tested as \"./../../foo\" and if the current directory \"./\" is in the permitted paths, it will pass the check, which may allow arbitrary file access."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-33870\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-33870"
  ]
}