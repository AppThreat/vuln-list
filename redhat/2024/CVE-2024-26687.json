{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Out of support scope",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Low",
  "public_date": "2024-04-03T00:00:00Z",
  "bugzilla": {
    "description": "kernel: xen/events: close evtchn after mapping cleanup",
    "id": "2273107",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2273107"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "4.4",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-362",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-26687",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nxen/events: close evtchn after mapping cleanup\nshutdown_pirq and startup_pirq are not taking the\nirq_mapping_update_lock because they can't due to lock inversion. Both\nare called with the irq_desc-\u003elock being taking. The lock order,\nhowever, is first irq_mapping_update_lock and then irq_desc-\u003elock.\nThis opens multiple races:\n- shutdown_pirq can be interrupted by a function that allocates an event\nchannel:\nCPU0                        CPU1\nshutdown_pirq {\nxen_evtchn_close(e)\n__startup_pirq {\nEVTCHNOP_bind_pirq\n-\u003e returns just freed evtchn e\nset_evtchn_to_irq(e, irq)\n}\nxen_irq_info_cleanup() {\nset_evtchn_to_irq(e, -1)\n}\n}\nAssume here event channel e refers here to the same event channel\nnumber.\nAfter this race the evtchn_to_irq mapping for e is invalid (-1).\n- __startup_pirq races with __unbind_from_irq in a similar way. Because\n__startup_pirq doesn't take irq_mapping_update_lock it can grab the\nevtchn that __unbind_from_irq is currently freeing and cleaning up. In\nthis case even though the event channel is allocated, its mapping can\nbe unset in evtchn_to_irq.\nThe fix is to first cleanup the mappings and then close the event\nchannel. In this way, when an event channel gets allocated it's\npotential previous evtchn_to_irq mappings are guaranteed to be unset already.\nThis is also the reverse order of the allocation where first the event\nchannel is allocated and then the mappings are setup.\nOn a 5.10 kernel prior to commit 3fcdaf3d7634 (\"xen/events: modify internal\n[un]bind interfaces\"), we hit a BUG like the following during probing of NVMe\ndevices. The issue is that during nvme_setup_io_queues, pci_free_irq\nis called for every device which results in a call to shutdown_pirq.\nWith many nvme devices it's therefore likely to hit this race during\nboot because there will be multiple calls to shutdown_pirq and\nstartup_pirq are running potentially in parallel.\n------------[ cut here ]------------\nblkfront: xvda: barrier or flush: disabled; persistent grants: enabled; indirect descriptors: enabled; bounce buffer: enabled\nkernel BUG at drivers/xen/events/events_base.c:499!\ninvalid opcode: 0000 [#1] SMP PTI\nCPU: 44 PID: 375 Comm: kworker/u257:23 Not tainted 5.10.201-191.748.amzn2.x86_64 #1\nHardware name: Xen HVM domU, BIOS 4.11.amazon 08/24/2006\nWorkqueue: nvme-reset-wq nvme_reset_work\nRIP: 0010:bind_evtchn_to_cpu+0xdf/0xf0\nCode: 5d 41 5e c3 cc cc cc cc 44 89 f7 e8 2b 55 ad ff 49 89 c5 48 85 c0 0f 84 64 ff ff ff 4c 8b 68 30 41 83 fe ff 0f 85 60 ff ff ff \u003c0f\u003e 0b 66 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 40 00 0f 1f 44 00 00\nRSP: 0000:ffffc9000d533b08 EFLAGS: 00010046\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000006\nRDX: 0000000000000028 RSI: 00000000ffffffff RDI: 00000000ffffffff\nRBP: ffff888107419680 R08: 0000000000000000 R09: ffffffff82d72b00\nR10: 0000000000000000 R11: 0000000000000000 R12: 00000000000001ed\nR13: 0000000000000000 R14: 00000000ffffffff R15: 0000000000000002\nFS:  0000000000000000(0000) GS:ffff88bc8b500000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 0000000002610001 CR4: 00000000001706e0\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\nCall Trace:\n? show_trace_log_lvl+0x1c1/0x2d9\n? show_trace_log_lvl+0x1c1/0x2d9\n? set_affinity_irq+0xdc/0x1c0\n? __die_body.cold+0x8/0xd\n? die+0x2b/0x50\n? do_trap+0x90/0x110\n? bind_evtchn_to_cpu+0xdf/0xf0\n? do_error_trap+0x65/0x80\n? bind_evtchn_to_cpu+0xdf/0xf0\n? exc_invalid_op+0x4e/0x70\n? bind_evtchn_to_cpu+0xdf/0xf0\n? asm_exc_invalid_op+0x12/0x20\n? bind_evtchn_to_cpu+0xdf/0x\n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-26687\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-26687\nhttps://lore.kernel.org/linux-cve-announce/2024040335-CVE-2024-26687-55d0@gregkh/T"
  ]
}