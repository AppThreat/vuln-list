{
  "affected_release": null,
  "package_state": [
    {
      "product_name": "Red Hat Enterprise Linux 6",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:6"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 7",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:7"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 8",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:8"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    },
    {
      "product_name": "Red Hat Enterprise Linux 9",
      "fix_state": "Not affected",
      "package_name": "kernel-rt",
      "cpe": "cpe:/o:redhat:enterprise_linux:9"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-04-04T00:00:00Z",
  "bugzilla": {
    "description": "kernel: mptcp: fix possible deadlock in subflow diag",
    "id": "2273470",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2273470"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "5.5",
    "cvss3_scoring_vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
    "status": "draft"
  },
  "iava": "",
  "cwe": "",
  "statement": "",
  "acknowledgement": "",
  "name": "CVE-2024-26781",
  "document_distribution": "",
  "details": [
    "In the Linux kernel, the following vulnerability has been resolved:\nmptcp: fix possible deadlock in subflow diag\nSyzbot and Eric reported a lockdep splat in the subflow diag:\nWARNING: possible circular locking dependency detected\n6.8.0-rc4-syzkaller-00212-g40b9385dd8e6 #0 Not tainted\nsyz-executor.2/24141 is trying to acquire lock:\nffff888045870130 (k-sk_lock-AF_INET6){+.+.}-{0:0}, at:\ntcp_diag_put_ulp net/ipv4/tcp_diag.c:100 [inline]\nffff888045870130 (k-sk_lock-AF_INET6){+.+.}-{0:0}, at:\ntcp_diag_get_aux+0x738/0x830 net/ipv4/tcp_diag.c:137\nbut task is already holding lock:\nffffc9000135e488 (\u0026h-\u003elhash2[i].lock){+.+.}-{2:2}, at: spin_lock\ninclude/linux/spinlock.h:351 [inline]\nffffc9000135e488 (\u0026h-\u003elhash2[i].lock){+.+.}-{2:2}, at:\ninet_diag_dump_icsk+0x39f/0x1f80 net/ipv4/inet_diag.c:1038\nwhich lock already depends on the new lock.\nthe existing dependency chain (in reverse order) is:\n-\u003e #1 (\u0026h-\u003elhash2[i].lock){+.+.}-{2:2}:\nlock_acquire+0x1e3/0x530 kernel/locking/lockdep.c:5754\n__raw_spin_lock include/linux/spinlock_api_smp.h:133 [inline]\n_raw_spin_lock+0x2e/0x40 kernel/locking/spinlock.c:154\nspin_lock include/linux/spinlock.h:351 [inline]\n__inet_hash+0x335/0xbe0 net/ipv4/inet_hashtables.c:743\ninet_csk_listen_start+0x23a/0x320 net/ipv4/inet_connection_sock.c:1261\n__inet_listen_sk+0x2a2/0x770 net/ipv4/af_inet.c:217\ninet_listen+0xa3/0x110 net/ipv4/af_inet.c:239\nrds_tcp_listen_init+0x3fd/0x5a0 net/rds/tcp_listen.c:316\nrds_tcp_init_net+0x141/0x320 net/rds/tcp.c:577\nops_init+0x352/0x610 net/core/net_namespace.c:136\n__register_pernet_operations net/core/net_namespace.c:1214 [inline]\nregister_pernet_operations+0x2cb/0x660 net/core/net_namespace.c:1283\nregister_pernet_device+0x33/0x80 net/core/net_namespace.c:1370\nrds_tcp_init+0x62/0xd0 net/rds/tcp.c:735\ndo_one_initcall+0x238/0x830 init/main.c:1236\ndo_initcall_level+0x157/0x210 init/main.c:1298\ndo_initcalls+0x3f/0x80 init/main.c:1314\nkernel_init_freeable+0x42f/0x5d0 init/main.c:1551\nkernel_init+0x1d/0x2a0 init/main.c:1441\nret_from_fork+0x4b/0x80 arch/x86/kernel/process.c:147\nret_from_fork_asm+0x1b/0x30 arch/x86/entry/entry_64.S:242\n-\u003e #0 (k-sk_lock-AF_INET6){+.+.}-{0:0}:\ncheck_prev_add kernel/locking/lockdep.c:3134 [inline]\ncheck_prevs_add kernel/locking/lockdep.c:3253 [inline]\nvalidate_chain+0x18ca/0x58e0 kernel/locking/lockdep.c:3869\n__lock_acquire+0x1345/0x1fd0 kernel/locking/lockdep.c:5137\nlock_acquire+0x1e3/0x530 kernel/locking/lockdep.c:5754\nlock_sock_fast include/net/sock.h:1723 [inline]\nsubflow_get_info+0x166/0xd20 net/mptcp/diag.c:28\ntcp_diag_put_ulp net/ipv4/tcp_diag.c:100 [inline]\ntcp_diag_get_aux+0x738/0x830 net/ipv4/tcp_diag.c:137\ninet_sk_diag_fill+0x10ed/0x1e00 net/ipv4/inet_diag.c:345\ninet_diag_dump_icsk+0x55b/0x1f80 net/ipv4/inet_diag.c:1061\n__inet_diag_dump+0x211/0x3a0 net/ipv4/inet_diag.c:1263\ninet_diag_dump_compat+0x1c1/0x2d0 net/ipv4/inet_diag.c:1371\nnetlink_dump+0x59b/0xc80 net/netlink/af_netlink.c:2264\n__netlink_dump_start+0x5df/0x790 net/netlink/af_netlink.c:2370\nnetlink_dump_start include/linux/netlink.h:338 [inline]\ninet_diag_rcv_msg_compat+0x209/0x4c0 net/ipv4/inet_diag.c:1405\nsock_diag_rcv_msg+0xe7/0x410\nnetlink_rcv_skb+0x1e3/0x430 net/netlink/af_netlink.c:2543\nsock_diag_rcv+0x2a/0x40 net/core/sock_diag.c:280\nnetlink_unicast_kernel net/netlink/af_netlink.c:1341 [inline]\nnetlink_unicast+0x7ea/0x980 net/netlink/af_netlink.c:1367\nnetlink_sendmsg+0xa3b/0xd70 net/netlink/af_netlink.c:1908\nsock_sendmsg_nosec net/socket.c:730 [inline]\n__sock_sendmsg+0x221/0x270 net/socket.c:745\n____sys_sendmsg+0x525/0x7d0 net/socket.c:2584\n___sys_sendmsg net/socket.c:2638 [inline]\n__sys_sendmsg+0x2b0/0x3a0 net/socket.c:2667\ndo_syscall_64+0xf9/0x240\nentry_SYSCALL_64_after_hwframe+0x6f/0x77\nAs noted by Eric we can break the lock dependency chain avoid\ndumping \n---truncated---"
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-26781\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-26781\nhttps://lore.kernel.org/linux-cve-announce/2024040458-CVE-2024-26781-0389@gregkh/T"
  ]
}