{
  "mitigation": "Mitigation for this issue is either not available or the currently available options don't meet the Red Hat Product Security criteria comprising ease of use and deployment, applicability to widespread installation base or stability.",
  "affected_release": null,
  "package_state": [
    {
      "product_name": "streams for Apache Kafka",
      "fix_state": "Affected",
      "package_name": "kafka",
      "cpe": "cpe:/a:redhat:amq_streams:1"
    }
  ],
  "threat_severity": "Moderate",
  "public_date": "2024-04-12T00:00:00Z",
  "bugzilla": {
    "description": "Kafka: Potential incorrect access control during migration from ZK mode to KRaft mode",
    "id": "2291362",
    "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2291362"
  },
  "cvss": {
    "cvss_base_score": "",
    "cvss_scoring_vector": "",
    "status": ""
  },
  "cvss3": {
    "cvss3_base_score": "6.8",
    "cvss3_scoring_vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N",
    "status": "draft"
  },
  "iava": "",
  "cwe": "CWE-863",
  "statement": "The vulnerability in Apache Kafka during the migration from ZooKeeper (ZK) to KRaft mode is of Moderate severity due to its potential impact on access control enforcement. By incorrectly interpreting the number of ACLs associated with a resource after an ACL removal, Kafka may misapply access permissions during the transitional phase. This could lead to temporary lapses in security enforcement, particularly concerning confidentiality and integrity for DENY ACLs or availability for ALLOW ACLs. While the bug does not result in permanent data loss or corruption, it necessitates careful management to prevent unauthorized access or disruption during the migration process. Immediate mitigation involves resetting broker states or strategically adding new ACLs to affected resources to restore correct access control functionality.",
  "acknowledgement": "",
  "name": "CVE-2024-27309",
  "document_distribution": "",
  "details": [
    "While an Apache Kafka cluster is being migrated from ZooKeeper mode to KRaft mode, in some cases ACLs will not be correctly enforced.\nTwo preconditions are needed to trigger the bug:\n1. The administrator decides to remove an ACL\n2. The resource associated with the removed ACL continues to have two or more other ACLs associated with it after the removal.\nWhen those two preconditions are met, Kafka will treat the resource as if it had only one ACL associated with it after the removal, rather than the two or more that would be correct.\nThe incorrect condition is cleared by removing all brokers in ZK mode, or by adding a new ACL to the affected resource. Once the migration is completed, there is no metadata loss (the ACLs all remain).\nThe full impact depends on the ACLs in use. If only ALLOW ACLs were configured during the migration, the impact would be limited to availability impact. if DENY ACLs were configured, the impact could include confidentiality and integrity impact depending on the ACLs configured, as the DENY ACLs might be ignored due to this vulnerability during the migration period.",
    "A flaw was found in Apache Kafka during the migration from ZooKeeper (ZK) to KRaft mode that affects Access Control List (ACL) enforcement. Specifically, when an ACL is removed from a resource and the resource retains two or more other ACLs, Kafka may incorrectly treat the resource as having only one ACL. This issue can lead to misconfigured access permissions during the migration period. Depending on the type of ACLs (ALLOW or DENY) in use, the impact ranges from potential availability issues (for ALLOW ACLs) to confidentiality and integrity risks (for DENY ACLs). The bug can be mitigated by resetting broker states or adding new ACLs without causing metadata loss."
  ],
  "references": [
    "https://www.cve.org/CVERecord?id=CVE-2024-27309\nhttps://nvd.nist.gov/vuln/detail/CVE-2024-27309"
  ]
}