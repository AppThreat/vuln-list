{
  "Class": "vulnerability",
  "ID": "oval:com.redhat.cve:def:202232209",
  "Version": "636",
  "Metadata": {
    "Title": "CVE-2022-32209 rubygem-rails-html-sanitizer: possible xss with certain configurations (important)",
    "References": [
      {
        "Source": "CVE",
        "RefID": "CVE-2022-32209",
        "RefURL": "https://access.redhat.com/security/cve/CVE-2022-32209"
      }
    ],
    "Description": "DOCUMENTATION: The MITRE CVE dictionary describes this issue as: # Possible XSS Vulnerability in Rails::Html::SanitizerThere is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.This vulnerability has been assigned the CVE identifier CVE-2022-32209.Versions Affected: ALLNot affected: NONEFixed Versions: v1.4.3## ImpactA possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both `select` and `style` elements.Code is only impacted if allowed tags are being overridden. This may be done via application configuration:```ruby# In config/application.rbconfig.action_view.sanitized_allowed_tags = [\"select\", \"style\"]```see https://guides.rubyonrails.org/configuring.html#configuring-action-viewOr it may be done with a `:tags` option to the Action View helper `sanitize`:```\u003c%= sanitize @comment.body, tags: [\"select\", \"style\"] %\u003e```see https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitizeOr it may be done with Rails::Html::SafeListSanitizer directly:```ruby# class-level optionRails::Html::SafeListSanitizer.allowed_tags = [\"select\", \"style\"]```or```ruby# instance-level optionRails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"select\", \"style\"])```All users overriding the allowed tags by any of the above mechanisms to include both \"select\" and \"style\" should either upgrade or use one of the workarounds immediately.## ReleasesThe FIXED releases are available at the normal locations.## WorkaroundsRemove either `select` or `style` from the overridden allowed tags.## CreditsThis vulnerability was responsibly reported by [windshock](https://hackerone.com/windshock?type=user).",
    "Advisory": {
      "From": "secalert@redhat.com",
      "Severity": "Important",
      "Issued": {},
      "Updated": {
        "Date": "2022-11-16"
      },
      "Cves": [
        {
          "CveID": "CVE-2022-32209",
          "Cvss3": "5.3/CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N",
          "Cwe": "CWE-79",
          "Impact": "important",
          "Href": "https://access.redhat.com/security/cve/CVE-2022-32209",
          "Public": "20220624"
        }
      ],
      "AffectedCpeList": [
        "cpe:/a:redhat:satellite:6.9",
        "cpe:/a:redhat:satellite:6.9::el7",
        "cpe:/a:redhat:satellite_capsule:6.9",
        "cpe:/a:redhat:satellite_capsule:6.9::el7"
      ],
      "Affected": {
        "Resolution": {
          "State": "Affected"
        }
      }
    }
  },
  "Criteria": {
    "Operator": "OR",
    "Criterions": [
      {
        "Comment": "Red Hat Enterprise Linux must be installed",
        "TestRef": "oval:com.redhat.cve:tst:20134120012"
      }
    ],
    "Criterias": [
      {
        "Operator": "AND",
        "Criterions": [
          {
            "Comment": "Red Hat Enterprise Linux 7 is installed",
            "TestRef": "oval:com.redhat.cve:tst:20134120011"
          },
          {
            "Comment": "rubygem-rails-html-sanitizer is installed",
            "TestRef": "oval:com.redhat.cve:tst:202232209001"
          },
          {
            "Comment": "rubygem-rails-html-sanitizer is signed with Red Hat redhatrelease2 key",
            "TestRef": "oval:com.redhat.cve:tst:202232209002"
          }
        ]
      }
    ]
  }
}