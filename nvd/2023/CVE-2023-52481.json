{
  "id": "CVE-2023-52481",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-02-29T06:15:46.060",
  "lastModified": "2024-02-29T13:49:29.390",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\narm64: errata: Add Cortex-A520 speculative unprivileged load workaround\n\nImplement the workaround for ARM Cortex-A520 erratum 2966298. On an\naffected Cortex-A520 core, a speculatively executed unprivileged load\nmight leak data from a privileged load via a cache side channel. The\nissue only exists for loads within a translation regime with the same\ntranslation (e.g. same ASID and VMID). Therefore, the issue only affects\nthe return to EL0.\n\nThe workaround is to execute a TLBI before returning to EL0 after all\nloads of privileged data. A non-shareable TLBI to any address is\nsufficient.\n\nThe workaround isn't necessary if page table isolation (KPTI) is\nenabled, but for simplicity it will be. Page table isolation should\nnormally be disabled for Cortex-A520 as it supports the CSV3 feature\nand the E0PD feature (used when KASLR is enabled)."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: arm64: errata: Agregar workaround de carga especulativa sin privilegios de Cortex-A520 Implementar la workaround para la errata 2966298 de ARM Cortex-A520. En un núcleo Cortex-A520 afectado, una carga sin privilegios ejecutada especulativamente podría filtrarse datos de una carga privilegiada a través de un canal lateral de caché. El problema sólo existe para cargas dentro de un régimen de traducción con la misma traducción (por ejemplo, el mismo ASID y VMID). Por tanto, el problema sólo afecta al retorno a EL0. La solución es ejecutar un TLBI antes de regresar a EL0 después de todas las cargas de datos privilegiados. Un TLBI que no se pueda compartir con cualquier dirección es suficiente. El workaround no es necesario si el aislamiento de la tabla de páginas (KPTI) está habilitado, pero por simplicidad lo será. El aislamiento de la tabla de páginas normalmente debe estar deshabilitado para Cortex-A520, ya que admite la función CSV3 y la función E0PD (utilizada cuando KASLR está habilitado)."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/32b0a4ffcaea44a00a61e40c0d1bcc50362aee25",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/471470bc7052d28ce125901877dd10e4c048e513",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/6e3ae2927b432a3b7c8374f14dbc1bd9ebe4372c",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}