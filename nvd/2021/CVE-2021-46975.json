{
  "id": "CVE-2021-46975",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-02-27T19:04:07.543",
  "lastModified": "2024-02-28T14:06:45.783",
  "vulnStatus": "Awaiting Analysis",
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: conntrack: Make global sysctls readonly in non-init netns\n\nThese sysctls point to global variables:\n- NF_SYSCTL_CT_MAX (\u0026nf_conntrack_max)\n- NF_SYSCTL_CT_EXPECT_MAX (\u0026nf_ct_expect_max)\n- NF_SYSCTL_CT_BUCKETS (\u0026nf_conntrack_htable_size_user)\n\nBecause their data pointers are not updated to point to per-netns\nstructures, they must be marked read-only in a non-init_net ns.\nOtherwise, changes in any net namespace are reflected in (leaked into)\nall other net namespaces. This problem has existed since the\nintroduction of net namespaces.\n\nThe current logic marks them read-only only if the net namespace is\nowned by an unprivileged user (other than init_user_ns).\n\nCommit d0febd81ae77 (\"netfilter: conntrack: re-visit sysctls in\nunprivileged namespaces\") \"exposes all sysctls even if the namespace is\nunpriviliged.\" Since we need to mark them readonly in any case, we can\nforego the unprivileged user check altogether."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: netfilter: conntrack: Hacer que los sysctls globales sean de solo lectura en redes que no son init. Estos sysctls apuntan a variables globales: - NF_SYSCTL_CT_MAX (\u0026amp;nf_conntrack_max) - NF_SYSCTL_CT_EXPECT_MAX (\u0026amp;nf_ct_expect_max) - NF_SYSCTL_CT_BUCKETS (\u0026amp;nf_conntrack_htable_size _user) Porque sus datos Los punteros no se actualizan para apuntar a estructuras por red, deben marcarse como de solo lectura en un ns que no sea init_net. De lo contrario, los cambios en cualquier espacio de nombres de red se reflejan (se filtran) en todos los demás espacios de nombres de red. Este problema existe desde la introducción de los espacios de nombres de red. La lógica actual los marca como de solo lectura si el espacio de nombres de red es propiedad de un usuario sin privilegios (que no sea init_user_ns). El commit d0febd81ae77 (\"netfilter: conntrack: volver a visitar sysctls en espacios de nombres sin privilegios\") \"expone todos los sysctls incluso si el espacio de nombres no tiene privilegios\". Dado que en cualquier caso necesitamos marcarlos como de sólo lectura, podemos prescindir por completo de la verificación de usuarios sin privilegios."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/2671fa4dc0109d3fb581bc3078fdf17b5d9080f6",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/671c54ea8c7ff47bd88444f3fffb65bf9799ce43",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/68122479c128a929f8f7bdd951cfdc8dd0e75b8f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/9b288479f7a901a14ce703938596438559d7df55",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/baea536cf51f8180ab993e374cb134b5edad25e2",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/d3598eb3915cc0c0d8cab42f4a6258ff44c4033e",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/da50f56e826e1db141693297afb99370ebc160dd",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/fbf85a34ce17c4cf0a37ee253f4c582bbfb8231b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}